class Solution {
public:
    int kthElement(int k, vector<int>& arr1, vector<int>& arr2) {
        int n1 = arr1.size();
        int n2 = arr2.size();
        
       
        if (n1 > n2) {
            return kthElement(k, arr2, arr1);
        }
        
        int low = max(0, k - n2);
        int high = min(k, n1);
        
        while (low <= high) {
            int cut1 = (low + high) >> 1;
            int cut2 = k - cut1;
            
            int left1 = cut1 == 0 ? INT_MIN : arr1[cut1 - 1];
            int left2 = cut2 == 0 ? INT_MIN : arr2[cut2 - 1];
            int right1 = cut1 == n1 ? INT_MAX : arr1[cut1];
            int right2 = cut2 == n2 ? INT_MAX : arr2[cut2];
            
            if (left1 <= right2 && left2 <= right1) {
                return max(left1, left2);
            }
            else if (left1 > right2) {
                high = cut1 - 1;
            }
            else {
                low = cut1 + 1;
            }
        }
        
        return -1; 
    }
};
