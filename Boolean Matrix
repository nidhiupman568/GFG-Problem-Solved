class Solution
{   
    public:
    //Function to modify the matrix such that if a matrix cell matrix[i][j]
    //is 1 then all the cells in its ith row and jth column will become 1.
    
    void cover(vector<vector<int> > &m, int row, int col){
        for(int i = 0; i < m.size(); i++){
            m[i][col] = 1;
        }
        for(int j = 0; j < m[0].size(); j++){
            m[row][j] = 1;
        }
    }
    
    void booleanMatrix(vector<vector<int> > &m)
    {
        // code here 
        int row = m.size();
        int col = m[0].size();
        
        vector<vector<int>> temp(row,vector<int>(col, 0));
        
        for(int i = 0; i < row; i++){
            for(int j = 0; j < col; j++){
                if(m[i][j] == 1) temp[i][j] = 1;
            }
        }
        
        for(int i = 0; i < row; i++){
            for(int j = 0; j < col; j++){
                if(temp[i][j] == 1){
                    cover(m,i,j);
                }
            }
        }
        
        
    }
};
