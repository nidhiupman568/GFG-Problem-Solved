class Solution{
public:
    // function to construct tree from string
    Node *treeFromString(string str){
        stack<Node *>st;
         int f=1;
        for(int i=0;i<str.length();i++){
            if(str[i]!='(' && str[i]!=')'){
                string s="";
                while(str[i]>='0' && str[i]<='9'){
                    s+=str[i];
                    i++;
                }
                st.push(new Node(stoi(s)));
                //cout<<st.size()<<endl;
                i--;
            }
            else if(str[i]==')'){
                if(st.size()==1){
                    f=0;
                    continue;
                }
               // cout<<st.top();
                Node *temp=st.top();
                st.pop();
                Node *root=st.top();
                if(!root->left && f){
                    root->left=temp;
                }
                else {
                    root->right=temp;
                }
            }
        }
        return st.top();
    }
};
