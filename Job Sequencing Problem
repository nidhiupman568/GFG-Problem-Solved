#include <algorithm>
#include <vector>

class Solution 
{
    public:
    //Function to find the maximum profit and the number of jobs done.
    vector<int> JobScheduling(Job arr[], int n) 
    { 
        // Sort jobs in descending order of profit
        sort(arr, arr + n, [](Job a, Job b) {
            return a.profit > b.profit;
        });

        int maxDeadline = 0;
        for (int i = 0; i < n; i++) {
            maxDeadline = max(maxDeadline, arr[i].dead);
        }

        vector<int> slot(maxDeadline + 1, -1);
        int jobsDone = 0, totalProfit = 0;

        for (int i = 0; i < n; i++) {
            for (int j = arr[i].dead; j > 0; j--) {
                if (slot[j] == -1) {
                    slot[j] = i;
                    jobsDone++;
                    totalProfit += arr[i].profit;
                    break;
                }
            }
        }

        return {jobsDone, totalProfit};
    } 
};
