#include<bits/stdc++.h>
#define int long long

using namespace std;

int32_t main() {
    int tt = 1;
    cin >> tt;
    while (tt--) {
        int n;
        cin >> n;

        if (n == 2) {
            cout << -1 << endl;
            continue;
        }

        vector<int> v1, v2;
        for (int i = 1; i <= n * n; i++) {
            if (i % 2)
                v1.push_back(i);
            else
                v2.push_back(i);
        }

        vector<vector<int>> v(n, vector<int>(n, -1));
        vector<vector<int>> ans(n, vector<int>(n, 0));

        if (n % 2 == 0) {
            for (int i = 0; i < n - 1; i++) {
                for (int j = 0; j < n - 1; j++) {
                    if (i == j)
                        v[i][j] = 1;
                    else if (v[i][j] == -1) {
                        if (i > j) {
                            v[i][j] = 0;
                            v[j][i] = 1;
                        } else {
                            v[i][j] = 1;
                            v[j][i] = 0;
                        }
                    }
                }
            }
            v[n - 1][n - 1] = 1;
            int c = (n - 2) / 2;
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    if (v[i][j] != -1)
                        continue;
                    if (i == n - 1 || j == n - 1) {
                        if (c) {
                            v[i][j] = 1;
                            v[j][i] = 0;
                            c--;
                        } else {
                            v[i][j] = 0;
                            v[j][i] = 0;
                        }
                    }
                }
            }

            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    if (v[i][j] == 0) {
                        ans[i][j] = v2.back();
                        v2.pop_back();
                    } else {
                        ans[i][j] = v1.back();
                        v1.pop_back();
                    }
                }
            }

            if (((n - 2) / 2) % 2 == 0) {
                swap(ans[n - 2][0], ans[n - 2][n - 2]);
            }

            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    cout << ans[i][j] << " ";
                }
                cout << endl;
            }
            continue;
        }

        v[0][0] = 1;
        int cnt = 1;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                if (cnt == (n * n + 1) / 2)
                    break;
                v[i][j] = 1;
                v[j][i] = 1;
                cnt += 2;
            }
            if (cnt == (n + 1) / 2)
                break;
        }

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (v[i][j] == -1) {
                    ans[i][j] = v2.back();
                    v2.pop_back();
                } else {
                    ans[i][j] = v1.back();
                    v1.pop_back();
                }
            }
        }

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                cout << ans[i][j] << " ";
            }
            cout << endl;
        }
    }
}
