class Solution{
public:
  
    bool isSafe(int id, bool mat[101][101], vector<int>&colors, int n, int col) {
        for(int j = 0; j < n; j++) {
            if(j != id && mat[j][id] == 1 && colors[j] == col) return false;
        }  
        return true;
    }
    
    bool solve(int id, bool mat[101][101], vector<int>&colors, int m, int n) {
        if(id == n) return true;
    
    
        for(int i = 1; i <= m; i++) {
            if(isSafe(id, mat, colors, n, i)) {
                colors[id] = i;
                if(solve(id+1, mat, colors, m, n)) return true;
    
                colors[id]= 0;
            }
        }
        return false;
    }

    bool graphColoring(bool mat[101][101], int m, int n) {
        // your code here
        // int colors[n] = {0};
        vector<int> colors(n , 0);
    
        if(solve(0, mat, colors, m ,n)){
            return true;
        }
        return false;
        
    }
};
