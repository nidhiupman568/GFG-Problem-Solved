class Solution 
{
    public:
bool ispossible(int A[],int N,int M,int mid)
    {
        int studentcount=1;
        int pagesum=0;
        for(int i=0;i<N;i++)
        {
            if(pagesum+A[i]<=mid)
            {
            pagesum=pagesum+A[i];
            }
            else
            {
                studentcount++;
                if(studentcount >M || A[i]>mid)
                {
                    return false;
                }
                pagesum=A[i];
            }
        }
        return true;
        
    }
    //Function to find minimum number of pages.
    int findPages(int A[], int N, int M) 
    {
        if(M>N)
        {
            return -1;
        }
    int s=0;
    int sum=0;
    for(int i=0;i<N;i++)
    {
        sum=sum+A[i];
    }
    int e=sum;
    int mid= s+(e-s)/2;
    int ans=-1;
    while(s<=e)
    {
        if(ispossible(A,N,M,mid))
        {
        ans=mid;
        e=mid-1;
        }
        else
        {
            s=mid+1;
        }
        mid=s+(e-s)/2;
    }
    return ans;
    }
};
